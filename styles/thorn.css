@import url('https://fonts.googleapis.com/css2?family=Playfair:ital,opsz,wght@0,5..1200,300..900;1,5..1200,300..900&display=swap');
body {
    font-family: "Playfair", serif;
    box-sizing: border-box;
    max-width: 1920px;
    padding: 100px 150px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 20% 60% 20%;
    grid-template-rows: auto 350px auto;
    gap: 10px;
    background: black;
}

nav {
    position: fixed;
    top: 0;
    left: 50%; 
    transform: translateX(-50%);  
    width: 100%;
    background: linear-gradient(90deg, #4B369D,#fbbce8);
    padding: 10px 0;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    z-index: 1000;
}

nav ul {
    display: flex; 
    list-style: none;
    margin: 0; 
    padding: 0; 
    display: flex;
    justify-content: space-evenly;
    gap: 15px;
}

nav li {
    margin: 0 15px; 
}

nav a {
    color: white; 
    text-decoration: none; 
    font-size: 25px; 
    padding: 5px 10px;
    border-radius: 5px; 
    transition: background-color 0.3s, color 0.3s;
}


nav a:hover {
    background-color: rgba(0, 0, 0, 0.2);
}

.container {
    grid-column: 2;
    grid-row: 1;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 65px auto;
}


.container h2 {
    font-size: 26px;
    font-weight: 700;
    font-style: bold;
    color: #FFFFE0;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
    text-align: center;
}

.thorn {
    position: relative;
    grid-column: 2;
    grid-row: 2;
    background-color: black;
    padding: 0;
    margin: 0;
    cursor: pointer;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    overflow: visible;
}

.object {
    position: absolute;
    width: 100%;
    height: 100%;
    transition: opacity 0.5s ease, visibility 0.5s ease;
}

.message {
    position: absolute;
    top: 50%;
    left: 50%;
    text-align: center;
    transform: translate(-50%, -50%);
    font-size: 28px;
    font-weight: 700;
    font-style: bold;
    color: #FFFFE0;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.5s ease, visibility 0.5s ease;
}

p {
    grid-column: 2;
    grid-row: 3;
    color: #FFFFE0;
    font-size: 26px;
    font-weight: 600;
    text-align: center;
}

.previous-step a {
    text-decoration: none;
    font-family: "Playfair", serif;
    display: block;
    color: white;
}

.next-step a {
    text-decoration: none;
    font-family: "Playfair", serif;
    display: block;
    color: white;
}

.previous-step {
    text-decoration: none;
    position: fixed;
    bottom: 50px;
    left: 40px;
    background-color: #4B369D;
    border: none;
    border-radius: 5px;
    padding: 10px 20px;
    font-size: 20px;
    font-weight: bold;
    cursor: pointer;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
    transition: transform 0.3s ease, background-color 0.3s ease; 
}

.previous-step:hover {
    background-color: #fbbce8;
    transform: scale(1.1);
}

.next-step {
    text-decoration: none;
    position: fixed;
    bottom: 50px;
    right: 40px;
    background-color: #4B369D;
    border: none;
    border-radius: 5px;
    padding: 10px 20px;
    font-size: 20px;
    font-weight: bold;
    cursor: pointer;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
    transition: transform 0.3s ease, background-color 0.3s ease; 
}

.next-step:hover {
    background-color: #fbbce8;
    transform: scale(1.1);
}


/**source: https://developer.mozilla.org/en-US/docs/Web/CSS/var**/
/**polygon() defines a shape using a series of points. 
The points are defined as percentages or lengths relative to the element's dimensions.**/
/**source: https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path**/
/**source: https://developer.mozilla.org/en-US/docs/Web/CSS/calc**/
/**Each calc() dynamically calculates the position of a polygon point. 
var(--rand1, 0%) adds randomness to the shape by using custom properties (--rand1, --rand2, etc.) that can be set dynamically in JavaScript.
This creates irregular shapes that can vary for each element.**/
.fragment {
    position: absolute;
    width: 80px;
    height: 80px;
    background-color: var(--color, #ffffff);
    clip-path: polygon(
        0% 0%, 
        calc(30% + var(--rand1, 0%)) calc(20% + var(--rand2, 0%)), 
        calc(80% + var(--rand3, 0%)) calc(50% + var(--rand4, 0%)), 
        calc(20% + var(--rand5, 0%)) calc(80% + var(--rand6, 0%))
    );
    animation: shatter 1.5s ease forwards;
    transform-origin: center;
    opacity: 1;
}

/**Source: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animations/Using_CSS_animations**/
@keyframes shatter {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    100% {
        transform: translate(calc(var(--x) * 300px), calc(var(--y) * 300px)) rotate(calc(var(--angle) * 720deg));
        opacity: 0;
    }
}

.thorn.fade-out {
    animation: fadeOut 0.5s ease forwards;
}

@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
        visibility: hidden;
    }
}

@media screen and (max-width: 400px) {
    body {
        background-color: red; /* 测试 */
    }
}
